// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id        String   @id @default(cuid())
  content   String
  metadata  Json
  embedding String?  // We'll store embeddings as JSON string since Prisma doesn't natively support vector type
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("documents")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model SearchQuery {
  id        String   @id @default(cuid())
  query     String
  results   Json?    // Store search results as JSON
  userId    String?  @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("search_queries")
}

model AutomationOpportunity {
  id                String   @id @default(cuid())
  name              String
  volume            Int      // 0-100 percentage
  complexity        Int      // 0-100 percentage
  category          String   // 'high-priority' | 'medium-priority' | 'low-priority'
  description       String
  solutionType      String   @map("solution_type") // 'ai' | 'automation'
  solutionReasoning String   @map("solution_reasoning")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("automation_opportunities")
}

model TaxSolution {
  id           String   @id @default(cuid())
  name         String
  type         String   // 'automation' | 'ai'
  category     String   // 'rule-based' | 'predictable' | 'research' | 'expert-interface'
  reasoning    String
  description  String
  keyFeatures  String[] // Array of feature strings
  businessValue String
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("tax_solutions")
}

model DocumentationSection {
  id          String   @id @default(cuid())
  title       String
  category    String   // 'efficiency' | 'insights' | 'overview' | 'practical-lessons'
  description String
  content     String   // HTML content for rich formatting
  keyPoints   String[] @map("key_points") // Array of key points
  orderIndex  Int      @map("order_index") // For ordering sections
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("documentation_sections")
}